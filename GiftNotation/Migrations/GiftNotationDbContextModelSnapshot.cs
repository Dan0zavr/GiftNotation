// <auto-generated />
using System;
using GiftNotation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GiftNotation.Migrations
{
    [DbContext(typeof(GiftNotationDbContext))]
    partial class GiftNotationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("GiftNotation.Models.Contact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("relationshipId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("contact");
                });

            modelBuilder.Entity("GiftNotation.Models.Event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("date")
                        .HasColumnType("TEXT");

                    b.Property<int>("eventTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("events");
                });

            modelBuilder.Entity("GiftNotation.Models.EventType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("eventType");
                });

            modelBuilder.Entity("GiftNotation.Models.Gift", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("picturePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("statusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("url")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("gift");
                });

            modelBuilder.Entity("GiftNotation.Models.GiftContact", b =>
                {
                    b.Property<int>("contectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("giftId")
                        .HasColumnType("INTEGER");

                    b.ToTable("giftContact");
                });

            modelBuilder.Entity("GiftNotation.Models.GiftEvent", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("giftEvent");
                });

            modelBuilder.Entity("GiftNotation.Models.MyFriends", b =>
                {
                    b.ToTable("friends");
                });

            modelBuilder.Entity("GiftNotation.Models.RelationshipType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("relationshipType");
                });

            modelBuilder.Entity("GiftNotation.Models.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("status");
                });
#pragma warning restore 612, 618
        }
    }
}
